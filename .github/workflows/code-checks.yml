name: Code Checks

on:
  workflow_call:
  push:
    branches:
      - 'main'
    paths:
      - 'src/**'
      - '!src/**/_version.py'
      - 'tests/**'
      - 'pyproject.toml'
  pull_request:
    branches:
      - 'main'
    paths:
      - 'src/**'
      - 'tests/**'
      - 'pyproject.toml'

concurrency:
  group: '${{ github.workflow }}-${{ github.event.pull_request && github.head_ref || github.ref_name }}'
  cancel-in-progress: true

jobs:
  analysis:
    name: Static analysis
    if: ${{ !cancelled() }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Hatch
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: 1
        run: |
          python -m pip install uv
          python -m uv pip install hatch

      - name: Check style
        run: hatch run style:check

      - name: Check typing
        if: ${{ !cancelled() }}
        run: hatch run types:check

  tests:
    name: Python ${{ matrix.python-version }} test
    if: ${{ !cancelled() }}
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Hatch
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: 1
        run: |
          python -m pip install uv
          python -m uv pip install hatch

      - name: Run tests with coverage
        env:
          PYTHONDONTWRITEBYTECODE: 1
          # Enable experimental faster for Python 3.12
          COVERAGE_CORE: sysmon
        run: hatch run test-cov

      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.python-version }}
          path: '.coverage.*'
          compression-level: 0

  coverage:
    name: Code coverage
    if: ${{ !cancelled() }}
    needs: tests
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Hatch
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: 1
        run: |
          python -m pip install uv
          python -m uv pip install hatch

      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: 'coverage-data-*'
          merge-multiple: true

      - name: Generate coverage report
        run: hatch run cov-report

      - name: Print coverage report
        run: hatch run cov-report --format=markdown | grep '^|' >> $GITHUB_STEP_SUMMARY

      - name: Clean up coverage data
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo
            try {
              const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
                owner,
                repo,
                run_id: context.runId,
              })
              const artifactIds = artifacts.data.artifacts
                .filter(artifact => artifact.name.startsWith('coverage-data-'))
                .map(artifact => artifact.id)
              for (const artifact_id of artifactIds) {
                await github.rest.actions.deleteArtifact({ owner, repo, artifact_id })
              }
            } catch (error) {
              core.setFailed(error.message)
            }
