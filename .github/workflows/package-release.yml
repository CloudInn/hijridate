name: Package Release

on:
  release:
    types:
      - published

jobs:
  checks:
    name: Code checks
    uses: ./.github/workflows/code-checks.yml

  release:
    name: Package release
    needs: checks
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Hatch
        run: |
          python -m pip install --upgrade pip
          pip install hatch

      - name: Build distributions
        run: hatch build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  cleanup:
    name: Workflows Cleanup
    runs-on: ubuntu-latest
    steps:
      - name: Clean up workflow runs
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            try {
              const paramsList = [
                { workflow_id: "draft-prep.yml", status: "completed" },
                { workflow_id: "package-release.yml", status: "completed", conclusion: "failure" },
              ];
              const runIds = []
              for (const params of paramsList) {
                const runs = await github.rest.actions.listWorkflowRuns({owner, repo, ...params});
                runIds.push(...runs.data.workflow_runs.map(run => run.id))
              }
              for (const id of runIds) {
                await github.rest.actions.deleteWorkflowRun({owner, repo, run_id: id});
              }
            } catch (error) {
              core.setFailed(error.message);
            }
